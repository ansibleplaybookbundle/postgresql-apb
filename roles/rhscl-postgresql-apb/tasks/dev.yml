- name: set development deployment config state to {{ state }}
  k8s_extensions_v1beta1_deployment:
    name: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    namespace: '{{ namespace }}'
    labels:
      app: rhscl-postgresql-apb
      service: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    replicas: 1
    strategy_type: Recreate
    spec_template_metadata_labels:
      app: rhscl-postgresql-apb
      service: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    containers:
    - env:
      - name: POSTGRESQL_PASSWORD
        value: '{{ postgresql_password }}'
      - name: POSTGRESQL_USER
        value: '{{ postgresql_user }}'
      - name: POSTGRESQL_DATABASE
        value: '{{ postgresql_database }}'
      image: "{{ image }}"
      image_pull_policy: IfNotPresent
      name: postgresql
      ports:
      - container_port: 5432
        protocol: TCP
      termination_message_path: /dev/termination-log
      working_dir: /
    dns_policy: ClusterFirst
    restart_policy: Always
    termination_grace_period_seconds: 30
    state: "{{ state }}"
  when: cluster=="kubernetes"

- name: set development deployment config state to {{ state }}
  openshift_v1_deployment_config:
    name: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    namespace: '{{ namespace }}'
    labels:
      app: rhscl-postgresql-apb
      service: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    replicas: 1
    selector:
      app: rhscl-postgresql-apb
      service: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    strategy_type: Rolling
    strategy_rolling_params:
      interval_seconds: 1
      max_surge: 25%
      max_unavailable: 25%
      timeout_seconds: 600
      update_period_seconds: 1
    spec_template_metadata_labels:
      app: rhscl-postgresql-apb
      service: postgresql-{{ postgresql_version }}-{{ _apb_plan_id }}
    containers:
    - env:
      - name: POSTGRESQL_PASSWORD
        value: '{{ postgresql_password }}'
      - name: POSTGRESQL_ADMIN_PASSWORD
        value: '{{ postgresql_admin_password }}'
      - name: POSTGRESQL_USER
        value: '{{ postgresql_user }}'
      - name: POSTGRESQL_DATABASE
        value: '{{ postgresql_database }}'
      image: "{{ image }}"
      image_pull_policy: IfNotPresent
      name: postgresql
      ports:
      - container_port: 5432
        protocol: TCP
      termination_message_path: /dev/termination-log
      working_dir: /
    dns_policy: ClusterFirst
    restart_policy: Always
    termination_grace_period_seconds: 30
    test: false
    triggers:
    - type: ConfigChange
    state: "{{ state }}"
  when: cluster=="openshift"
